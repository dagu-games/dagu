let quests={getQuest:function(quest_name){for(let i=0;i<quests.quest_list.length;i++){if(quest_name===quests.quest_list[i].name){return quests.quest_list[i]}}return null},getAvailableQuests:function(){let ans=[];for(let i=0;i<quests.quest_list.length;i++){if(!quests.isQuestCompleted(quests.quest_list[i].name)&&quests.quest_list[i].isAvailable()){ans.push(quests.quest_list[i])}}return ans},isQuestCompleted:function(quest_name){for(let i=0;i<game.character.completed_quests.length;i++){if(quest_name===game.character.completed_quests[i]){return true}}return false},hasQuest:function(quest_name){for(let i=0;i<game.character.quests.length;i++){if(game.character.quests[i]===quest_name){return true}}return false},getRandomAvailableQuestName:function(){let quests=util.getAvailableQuests();if(quests.length>0){return util.getRandomItemInArray(quests).name}else{return null}},logMonsterKill:function(monster_name){for(let i=0;i<game.character.quests.length;i++){quests.getQuest(game.character.quests[i]).onMonsterKill(monster_name)}},logChunkExplore:function(chunk_x,chunk_y){for(let i=0;i<game.character.quests.length;i++){quests.getQuest(game.character.quests[i]).onChunkExplore(chunk_x,chunk_y)}},logTick:function(){for(let i=0;i<game.character.quests.length;i++){quests.getQuest(game.character.quests[i]).onTick()}},countGoalItems:function(goal_item_name){let count=0;for(let i=0;i<game.character.inventory.items.length;i++){if(game.character.inventory.items[i].name===goal_item_name){count++}}return count},removeGoalItems:function(goal_item_name){for(let i=0;i<game.character.inventory.items.length;i++){if(game.character.inventory.items[i].name===goal_item_name){game.character.inventory.items.splice(i,1);i--}}},requestMonsters:function(){let monsters=[];for(let i=0;i<game.character.quests.length;i++){let quest=quests.getQuest(game.character.quests[i]);if(quest.monsters!=null&&quest.monsters.length>0){monsters=monsters.concat(quest.monsters)}}return monsters},requestDungeons:function(){let dungeons=[];for(let i=0;i<game.character.quests.length;i++){let quest=quests.getQuest(game.character.quests[i]);if(quest.dungeons!=null&&quest.dungeons.length>0){dungeons=dungeons.concat(quest.dungeons)}}return dungeons},requestNPCs:function(){let NPCs=[];let quest_list=quests.getAvailableQuests();for(let i=0;i<quest_list.length;i++){NPCs.push(quest_list[i].generateNPC())}return NPCs},quest_list:[{name:"Find my dog!",description:"I lost my dog! can you help me find it? Some monsters took him from me!",monsters:["Hellhound"],dungeons:[],isAvailable:function(){return true},meetsRequirements:function(){return quests.countGoalItems("Lost Dog")>0},findDirection:function(){let monster_point=util.getNearestMonsterByNames("Hellhound");if(monster_point==null){return"?"}else{return util.findDirection(game.character.x,game.character.y,monster_point.x,monster_point.y)}},onAccept:function(){},onAbandon:function(){quests.removeGoalItems("Lost Dog")},onMonsterKill:function(monster_name){if(quests.countGoalItems("Lost Dog")<1&&util.isInArray(["Hellhound"],monster_name)){game.character.inventory.items.push({name:"Lost Dog",description:"You found the lost dog! Take him back to his owner and they will reward you!",icon:INTERFACE_ICONS.GOAL_ITEMS.LOST_DOG,type:ITEM_TYPES.GOAL_ITEM})}},onChunkExplore:function(chunk_x,chunk_y){},onTick:function(){},onComplete:function(){game_logic.giveEXP(1e3);game.output.push("Thank you for finding me dog! I was worried sick!");quests.removeGoalItems("Lost Dog");return true},generateNPC:function(){let npc=game_logic.generateBaseNPC();return{name:npc.name,type:"quest_giver",icon:npc.icon,description:npc.description,quest:"Find my dog!"}}}]};